



<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>TestResults</title>
	<link rel="stylesheet" type="text/css" href="/CSS/HalvaDefaultStyle.css"/>
	
</head>
<body>
	<div> 
		<div id="uxBanner">
            <div id="uxLogo">
                <img src="/Resources/WheatSheaf.svg" alt="Bundle of wheat"/>
            </div>
			<div id="uxBannerText">
                <div id="uxSiteName">Halva</div>
                <div id="uxSlogan">Be a gluten for punishment.</div>
            </div>
            <div style="clear:both"></div>
		</div>
		<header>
			
		</header>
		

<h1>Test Results</h1>
<form action="/Midterm/DisplayResults" method="post"><input name="__RequestVerificationToken" type="hidden" value="UEChch2hnHlKaIHF4vNvpizauDAz9y0ELbT637RvX9sNNuaj91FjYeJONMzGCf-FYqyE_KbHNB07ECYnG60qq9WIESBpOpUu6MuVyrZP5OM1" /><div class="display-label">Answer</div>
<div class="display-field">True</div>
<div class="display-label">ID</div>
<div class="display-field">1</div>
<div class="display-label">Question</div>
<div class="display-field">Cookies can be transferred between pages</div>
<div class="display-label">Answer</div>
<div class="display-field">False</div>
<div class="display-label">ID</div>
<div class="display-field">2</div>
<div class="display-label">Question</div>
<div class="display-field">Browsers must support ASP.NET in order to display pages created with it</div>
<div class="display-label">Answer</div>
<div class="display-field">False</div>
<div class="display-label">ID</div>
<div class="display-field">3</div>
<div class="display-label">Question</div>
<div class="display-field">It is good practice to use inline CSS styles</div>
<div class="display-label">Answer</div>
<div class="display-field">False</div>
<div class="display-label">ID</div>
<div class="display-field">4</div>
<div class="display-label">Question</div>
<div class="display-field">MVC View Code beginning with @ is interpreted by the browser</div>
<div class="display-label">Answer</div>
<div class="display-field">False</div>
<div class="display-label">ID</div>
<div class="display-field">5</div>
<div class="display-label">Question</div>
<div class="display-field">HTTP Status Code 200 indicates an error</div>
<div class="display-label">Answer</div>
<div class="display-field">True</div>
<div class="display-label">ID</div>
<div class="display-field">6</div>
<div class="display-label">Question</div>
<div class="display-field">The description meta element is useful for search engine optimization</div>
<div class="display-label">Answer</div>
<div class="display-field">True</div>
<div class="display-label">ID</div>
<div class="display-field">7</div>
<div class="display-label">Question</div>
<div class="display-field">Forms should ask as little as possible from the user</div>
<div class="display-label">Answer</div>
<div class="display-field">Inline, Internal, External, Browser</div>
<div class="display-label">ID</div>
<div class="display-field">8</div>
<div class="display-label">Question</div>
<div class="display-field">List the following in the order of precedence (highest to lowest) for defining CSS styles: internal stylesheet, browser stylesheet, external stylesheet, inline style</div>
<div class="display-label">Answer</div>
<div class="display-field">Inline, Name, Attribute, </div>
<div class="display-label">ID</div>
<div class="display-field">9</div>
<div class="display-label">Question</div>
<div class="display-field">List the following CSS selector types in order of precedence (highest to lowest): element selector, attribute/class selector, name selector, inline style</div>
<div class="display-label">Answer</div>
<div class="display-field">Little Bobby Tables</div>
<div class="display-label">ID</div>
<div class="display-field">10</div>
<div class="display-label">Question</div>
<div class="display-field">Why should you always use parameters for SQL statements instead of directly concatenating values into the string?</div>
<div class="display-label">Answer</div>
<div class="display-field">App_Data</div>
<div class="display-label">ID</div>
<div class="display-field">11</div>
<div class="display-label">Question</div>
<div class="display-field">An ASP.NET website should never allow the code to write data to the project folder on the server, with the exception of what special folder?</div>
<div class="display-label">Answer</div>
<div class="display-field">Width: 70px Height: 35px</div>
<div class="display-label">ID</div>
<div class="display-field">12</div>
<div class="display-label">Question</div>
<div class="display-field">Given the following CSS for a div, what are the final height and width of each div box? div{width: 50px; height: 25px; padding: 5px 10px;}</div>
<div class="display-label">Answer</div>
<div class="display-field">Width: 24px Height: 1306px</div>
<div class="display-label">ID</div>
<div class="display-field">13</div>
<div class="display-label">Question</div>
<div class="display-field">Given the following CSS for a div, what are the final height and width of each div box?(Duplicate specification of margin is intentional) div{width: 30px; width: 20px; padding: 5px; margin: 3px 2px 5px 5px; border: solid 1px #000; margin-left: 10px;}</div>
<div class="display-label">Answer</div>
<div class="display-field">Element: 8 Attribute: 2 ID: 1</div>
<div class="display-label">ID</div>
<div class="display-field">14</div>
<div class="display-label">Question</div>
<div class="display-field">Given the following CSS selector, how many ID selectors, class/attribute selectors and element selectors are there (e.g. ID:1,Class/Attribute:2, Element:0)&lt;br /&gt;html body main.mainSection div ul#anchorList .item a[data-type=&quot;statusLink&quot;]{}</div>
<div class="display-label">Answer</div>
<div class="display-field">Forms are submitted using the POST method by default</div>
<div class="display-label">ID</div>
<div class="display-field">15</div>
<div class="display-label">Question</div>
<div class="display-field">What is default HTTP &#39;method&#39; used when a &amp;lt;form&amp;gt; is submitted?</div>
<div class="display-label">Answer</div>
<div class="display-field">Web requests use the GET method by default</div>
<div class="display-label">ID</div>
<div class="display-field">16</div>
<div class="display-label">Question</div>
<div class="display-field">What HTTP &#39;method&#39; is used when you type an address into the location bar of your browser and press &#39;Enter&#39;?</div>
<div class="display-label">Answer</div>
<div class="display-field">Indicates what type of document this is to the browser so the browser can figure out what should be supported and how things should be done.</div>
<div class="display-label">ID</div>
<div class="display-field">17</div>
<div class="display-label">Question</div>
<div class="display-field">What is the purpose of the DOCTYPE declaration at the top of a web page</div>
<div class="display-label">Answer</div>
<div class="display-field">Block elements take up the entire width of the page while inline elements do their darndest to fit on the same line.</div>
<div class="display-label">ID</div>
<div class="display-field">18</div>
<div class="display-label">Question</div>
<div class="display-field">What is the difference between inline and block HTML elements</div>
<div class="display-label">Answer</div>
<div class="display-field">The alt attribute indicates what the image was supposed to be if the image does not load. This allows information to be communicated if the client refuses to load images or the image just doesn&#39;t work properly.</div>
<div class="display-label">ID</div>
<div class="display-field">19</div>
<div class="display-label">Question</div>
<div class="display-field">Explain why the alt attr ibute of the img tag is important</div>
<div class="display-label">Answer</div>
<div class="display-field">Above the fold means that it is immediately visible upon loading the page without scrolling.</div>
<div class="display-label">ID</div>
<div class="display-field">20</div>
<div class="display-label">Question</div>
<div class="display-field">What does it mean for content to be &#39;Above the Fold&#39;</div>
<div class="display-label">Answer</div>
<div class="display-field">HTML should only contain information about the webpage, it should contain no layout. This leads to a separation of layout and functionality. A page can still be functional if the CSS is not loaded.</div>
<div class="display-label">ID</div>
<div class="display-field">21</div>
<div class="display-label">Question</div>
<div class="display-field">I often drone on about HTML being a semantic language.  What do I mean, and how does this affect the way HTML should be written</div>
<div class="display-label">Answer</div>
<div class="display-field">The view could require additional information that we would not want to store. Because of this a separate model should be created that contains the business object data in addition to the other required data.</div>
<div class="display-label">ID</div>
<div class="display-field">22</div>
<div class="display-label">Question</div>
<div class="display-field">A business object can be used as the model as part of the MVC pattern.  Why would we create a model separate from this for use with the view?</div>
<div class="display-label">Answer</div>
<div class="display-field">HyperText Markup Language</div>
<div class="display-label">ID</div>
<div class="display-field">23</div>
<div class="display-label">Question</div>
<div class="display-field">HTML Stands For</div>
<div class="display-label">Answer</div>
<div class="display-field">All of the above</div>
<div class="display-label">ID</div>
<div class="display-field">24</div>
<div class="display-label">Question</div>
<div class="display-field">For accessibility, all controls that ask for user input must have an associated:</div>
<div class="display-label">Answer</div>
<div class="display-field">ul</div>
<div class="display-label">ID</div>
<div class="display-field">25</div>
<div class="display-label">Question</div>
<div class="display-field">Which of the following elements is most appropriate for presenting the user with a list of items in now particular order?</div>
<div class="display-label">Answer</div>
<div class="display-field">Document Object Model</div>
<div class="display-label">ID</div>
<div class="display-field">26</div>
<div class="display-label">Question</div>
<div class="display-field">The living version of a page within the browser is called the</div>
<div class="display-label">Answer</div>
<div class="display-field">div.color div#specificBox</div>
<div class="display-label">ID</div>
<div class="display-field">27</div>
<div class="display-label">Question</div>
<div class="display-field">Given the following HTML, which selector matches and is the most specific for referring to the innermost div?&lt;br /&gt;&amp;lt;div&amp;gt;&amp;lt;div id=&quot;specificBox&quot; class=&quot;color&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;</div>
<div class="display-label">Answer</div>
<div class="display-field">MasterPages</div>
<div class="display-label">ID</div>
<div class="display-field">28</div>
<div class="display-label">Question</div>
<div class="display-field">The ASP.NET WebForms equivalent of MVC Layout pages is</div>
<div class="display-label">Answer</div>
<div class="display-field">UPDATE</div>
<div class="display-label">ID</div>
<div class="display-field">29</div>
<div class="display-label">Question</div>
<div class="display-field">Which of the following is not a valid HTTP method?</div>
<div class="display-label">Answer</div>
<div class="display-field">main</div>
<div class="display-label">ID</div>
<div class="display-field">30</div>
<div class="display-label">Question</div>
<div class="display-field">Which of the following elements should all pages contain</div>
</form>

		
	</div>

    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.1/jquery.validate.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.6/jquery.validate.unobtrusive.js"></script>


<!-- Visual Studio Browser Link -->
<script type="application/json" id="__browserLink_initializationData">
    {"appName":"Chrome","requestId":"16e2b698e30149dfa29533752ef92599"}
</script>
<script type="text/javascript" src="http://localhost:4210/f5a5878e08aa426bb74dd4d0561f8419/browserLink" async="async"></script>
<!-- End Browser Link -->

</body>
</html>
